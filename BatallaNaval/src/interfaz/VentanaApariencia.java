package interfaz;

import codigoNegocio.DecoradorHalloween;
import codigoNegocio.DecoradorNavidad;
import codigoNegocio.DecoradorOriginal;
import codigoNegocio.DecoradorTablero;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.util.LinkedHashMap;
import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 * VentanaApariencia: Ventana encargada del cambio de apariencia en el Tablero.
 * 
 * @author Alberto Fernández Hernández
 * @author Francisco Cano Díaz
 */
public class VentanaApariencia extends javax.swing.JFrame{

    // Tablero de juego en el que se desarrolla la Partida.
    private Tablero tablero;
    // Decorador encargado de cambiar la apariencia del Tablero.
    private DecoradorTablero decoradorTablero;
    // Colección de las casillas del Jugador junto con el JLabel correspondiente
    // de cada una del Tablero.
    private LinkedHashMap<String, JLabel> casillasJugador;
    // Colección de las casillas de la IA junto con el JLabel correspondiente
    // de cada una del Tablero.
    private LinkedHashMap<String, JLabel> casillasIA;
    // JFrame que representa al Tablero.
    private JFrame ventana;
    
    /**
     * Constructor.
     * 
     * @param casillasJugador Colección de las casillas del Jugador junto con el
     *                        JLabel correspondiente de cada una del Tablero.
     * @param casillasIA Colección de las casillas de la IA junto con el
     *                   JLabel correspondiente de cada una del Tablero.
     * @param ventana JFrame que representa al Tablero.
     * @param tablero Tablero de juego en el que se desarrolla la Partida.
     */
    public VentanaApariencia(LinkedHashMap<String, JLabel> casillasJugador, 
                             LinkedHashMap<String, JLabel> casillasIA, JFrame ventana,
                             Tablero tablero) {
        this.casillasJugador = casillasJugador;
        this.casillasIA = casillasIA;
        this.ventana = ventana;
        this.tablero = tablero;
        // Iniciamos la ventana, establecemos sus dimensiones y la centramos.
        initComponents();
        this.setSize(360, 160);
        centrarVentana(this);
    }
    
    /**
     * Método encargado de centrar la ventana en función de la resolución de
     * pantalla actual.
     * 
     * @param frame Ventana actual.
     */
    public static void centrarVentana(Window frame) {
        // Obtenemos la dimensión de la pantalla.
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        // Obtenemos las dimensiones para centrar la ventana.
        int anchura = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
        int altura = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
        // Establecemos las dimensiones.
        frame.setLocation(anchura, altura);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        halloweenButton = new javax.swing.JButton();
        navidadButton = new javax.swing.JButton();
        originalButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BATTLEVA: SELECCIÓN APARIENCIA");
        setMaximumSize(new java.awt.Dimension(360, 160));
        setMinimumSize(new java.awt.Dimension(360, 160));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(360, 160));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Copperplate", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SELECCIONE UNA APARIENCIA");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(41, 10, 278, 24);

        halloweenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/imagenes/botonHalloween .jpg"))); // NOI18N
        halloweenButton.setMaximumSize(new java.awt.Dimension(80, 80));
        halloweenButton.setMinimumSize(new java.awt.Dimension(80, 80));
        halloweenButton.setPreferredSize(new java.awt.Dimension(80, 80));
        halloweenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halloweenButtonActionPerformed(evt);
            }
        });
        getContentPane().add(halloweenButton);
        halloweenButton.setBounds(41, 40, 80, 80);

        navidadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/imagenes/botonNavidad.jpg"))); // NOI18N
        navidadButton.setMaximumSize(new java.awt.Dimension(80, 80));
        navidadButton.setMinimumSize(new java.awt.Dimension(80, 80));
        navidadButton.setPreferredSize(new java.awt.Dimension(80, 80));
        navidadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navidadButtonActionPerformed(evt);
            }
        });
        getContentPane().add(navidadButton);
        navidadButton.setBounds(140, 40, 80, 80);

        originalButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/imagenes/botonOriginal.jpg"))); // NOI18N
        originalButton.setMaximumSize(new java.awt.Dimension(80, 80));
        originalButton.setMinimumSize(new java.awt.Dimension(80, 80));
        originalButton.setPreferredSize(new java.awt.Dimension(80, 80));
        originalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                originalButtonActionPerformed(evt);
            }
        });
        getContentPane().add(originalButton);
        originalButton.setBounds(239, 40, 80, 80);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/imagenes/PortadaGrande.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(-410, 0, 790, 160);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Método encargado de cambiar la apariencia del Tablero a Navidad al pulsar
     * el botón Navidad llamando a los métodos correspondientes.
     * 
     * @param evt Evento del botón Navidad.
     */
    private void navidadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navidadButtonActionPerformed
        // Creamos el decorador de Navidad.
        decoradorTablero = new DecoradorNavidad(tablero);
        // Decoramos el Tablero.
        decoradorTablero.decorarTablero(casillasJugador, casillasIA, ventana);
        // Cerramos la ventana actual.
        this.dispose();
    }//GEN-LAST:event_navidadButtonActionPerformed

    /**
     * Método encargado de cambiar la apariencia del Tablero a Halloween al pulsar
     * el botón Halloween llamando a los métodos correspondientes.
     * 
     * @param evt Evento del botón Halloween.
     */
    private void halloweenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halloweenButtonActionPerformed
       // Creamos el decorador de Halloween.
        decoradorTablero = new DecoradorHalloween(tablero);
        // Decoramos el Tablero.
        decoradorTablero.decorarTablero(casillasJugador, casillasIA, ventana);
        // Cerramos la ventana actual.
        this.dispose();
    }//GEN-LAST:event_halloweenButtonActionPerformed

    /**
     * Método encargado de cambiar la apariencia del Tablero a Original al pulsar
     * el botón Original llamando a los métodos correspondientes.
     * 
     * @param evt Evento del botón Original.
     */
    private void originalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_originalButtonActionPerformed
        // Creamos el decorador Original.
        decoradorTablero = new DecoradorOriginal(tablero);
        // Decoramos el Tablero.
        decoradorTablero.decorarTablero(casillasJugador, casillasIA, ventana);
        // Cerramos la ventana actual.
        this.dispose();
    }//GEN-LAST:event_originalButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton halloweenButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton navidadButton;
    private javax.swing.JButton originalButton;
    // End of variables declaration//GEN-END:variables
}